# MASTER CONFIGURATION FILE


# APPLICATION
spring.application.name=spring-boot-learn-1
spring.profiles.active=dev

#####CONTEXT PATH#######
#server.servlet.context-path=/api

#####SERVER PORT##########
#server.port=8081
#Server Port for Authentication (OAUTH)
server.port:8086


##### REDIS CONFIGURATION #######
#Remote Server IP : 192.168.6.128
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=
spring.cache.type=redis
spring.cache.redis.cache-null-values=false


###### SPRING CLOUD #############
#disabled the eureak client registery and cloud config
spring.cloud.config.enabled=false
spring.cloud.config.uri=http://localhost:8888
spring.cloud.config.name=microservice-1
eureka.client.enabled=false


########## SPRING SECURITY ##############
#spring.security.user.name=springBootClient
#spring.security.user.password=Java@123



# MYSQL JDBC Configuration (By default we are using H2 Internal DB)
#spring.datasource.url=jdbc:mysql://localhost:3306/api?createDatabaseIfNotExist=true
#spring.datasource.username=root
#spring.datasource.password=password
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# H2 JDBC Configuration
spring.datasource.url=jdbc:h2:file:./db/test
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true

#JPA Configuration
#spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

######## HIKARI Connection Pooling Configuration ######


########## MYSQL CONFIGURATION #############
#spring.datasource.url=jdbc:mysql://localhost:3306/api
#spring.datasource.username=root
#spring.datasource.password=Java@123
#spring.jpa.hibernate.ddl-auto=update
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
#spring.jpa.show-sql=true

########## ACTUATOR ADMIN CLIENT #############
#spring.boot.admin.client.enabled=false
#spring.boot.admin.client.username=springBootAdminServer
#spring.boot.admin.client.password=Java@123	
#spring.boot.admin.client.instance.metadata.user.name=${spring.security.user.name}
#spring.boot.admin.client.instance.metadata.user.password=${spring.security.user.password}
#spring.boot.admin.client.url=http://localhost:8888
#spring.boot.admin.client.instance.name=Spring Boot API Endpoints
#spring.boot.admin.client.instance.metadata.tags.environment=dev
#info.tags.environment=dev

############## mongoDB LOCAL ###################
#spring.data.mongodb.database=api
#spring.data.mongodb.uri=mongodb://localhost:27017/?readPreference=primary&appname=MongoDB%20Compass%20Community&ssl=false


############## mongoDB ATLAS ###################
#spring.data.mongodb.username=mongoDB
## URL ENCODED PASSWORD
#spring.data.mongodb.password=Java%40123
#spring.data.mongodb.database=api-test
#spring.data.mongodb.uri=mongodb+srv://{spring.data.mongodb.username}:{spring.data.mongodb.password}@api-test-2yaq0.mongodb.net/test?retryWrites=true&w=majority

############## OVERRIDE URL NOT FOUND ERRORCONTROLLER #############
server.error.whitelabel.enabled=false

############# DISABLING CONDITION EVALUATION DELTA OF SPRING DEVTOOLS ################
spring.devtools.restart.log-condition-evaluation-delta=false

############## ENABLING ALL ACTUATOR ENDPOINTS #################
#management.endpoints.web.exposure.include=*


############## SPRING WEB MVC View Resolver #############
spring.mvc.view.prefix= /WEB-INF/jsp/
spring.mvc.view.suffix= .jsp

############## JACKSON CASE INSENSITIVE SETTING : Object Mapping ############
spring.jackson.mapper.accept-case-insensitive-properties=true

############# HYSTRIX DASHBOARD ENDPOINT EXPOSURE #################	
#management.endpoints.web.exposure.include=hystrix.stream
management.endpoints.web.exposure.include=*
#UI available at http:localhost:8081/hystrix
# Stream URL
#http://localhost:8081/actuator/hystrix.stream

############## EXTERNAL CONFIGURATION ##################
app.external.config.dummy.name=from inside application.properties
app.external.config.dummy.description=Welcome from ${app.external.config.dummy.name}

#comment below values if you want to load them from spring cloud config server
my.list.value=One,Two,Three
db.connection={connectionString:'http://___',userName:'foo',password:'pass'}
db.host=127.0.01
db.port=8081

plugins {
	id 'org.springframework.boot' version '2.2.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id 'war'
}

group = 'org'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

repositories {
	mavenCentral()
}

ext {
  set('springBootAdminVersion', "2.2.1")
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	//Rabbit MQ
	//implementation 'org.springframework.boot:spring-boot-starter-amqp'
	
	//spring boot actuator admin panel
	implementation 'org.springframework.boot:spring-boot-starter-security'
  	implementation 'de.codecentric:spring-boot-admin-starter-client'
  
	//Datbase API
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    //runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.session:spring-session-core'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.ibm.db2:jcc'
	runtimeOnly 'mysql:mysql-connector-java'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
}

dependencyManagement {
  imports {
    mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
  }
}

test {
	useJUnitPlatform()
}

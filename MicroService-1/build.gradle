plugins {
	id 'org.springframework.boot' version '2.3.4.BUILD-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id "org.sonarqube" version "2.7"
}

group = 'com.api'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '8'

jar {
    archiveBaseName = 'microservice-1'
    archiveVersion =  '1.0.0'
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

ext {
  set('springCloudVersion', "Hoxton.BUILD-SNAPSHOT")
}

dependencies {
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.10.2'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.10.2'
	compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: '2.10.1'
	
    compile("mysql:mysql-connector-java")
	compile 'org.json:json:20171018'
	
	// https://mvnrepository.com/artifact/org.apache.tomcat.embed/tomcat-embed-jasper
	compile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-jasper', version: '9.0.37'

	// https://mvnrepository.com/artifact/javax.servlet/jstl
	compile group: 'javax.servlet', name: 'jstl', version: '1.2'
    
    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
	compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.12'
     
    // https://mvnrepository.com/artifact/redis.clients/jedis
    compile group: 'redis.clients', name: 'jedis', version: '3.3.0'
    
	 // https://mvnrepository.com/artifact/com.google.code.gson/gson
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
	
	//webjars	
	implementation 'org.webjars:webjars-locator-core'
	implementation 'org.webjars:sockjs-client:1.0.2'
	implementation 'org.webjars:stomp-websocket:2.3.3'
	implementation 'org.webjars:bootstrap:3.3.7'
	implementation 'org.webjars:jquery:3.1.1-1'
	
    runtimeOnly 'com.h2database:h2'
	
	implementation 'org.apache.kafka:kafka-streams'
  	implementation 'org.springframework.kafka:spring-kafka'
  	implementation 'org.springframework.kafka:spring-kafka-test'
  	implementation 'org.springframework.cloud:spring-cloud-sleuth-zipkin'
  	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth' 	
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix'	
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-cache' 
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	compile group: 'org.junit.platform', name: 'junit-platform-commons', version: '1.7.0'
	  testImplementation('org.springframework.boot:spring-boot-starter-test') {
      exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  	}
}

test {
	useJUnitPlatform()
}


sourceSets{
	test{
		java.srcDirs = ['src/test/java/unit', 'src/test/java/integration']
	}
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
  }
}

